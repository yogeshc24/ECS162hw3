{{! Partial for a single post }}
<div class="post">
    <div class="post-avatar">
        <!-- the user's avatar -->
         <img src="{{#if this.avatar_url}}{{this.avatar_url}}{{else}}/avatar/{{this.username}}{{/if}}" alt="{{this.username}}'s avatar" class="post-avatar-img">
    </div>
    <div class="post-content preserve-newlines">
        <!-- the post -->
         <h3>{{title}}</h3>
         <p>{{content}}</p>
        <div class="post-status-bar">
            <!-- everything that is shown in the status bar -->
            <!-- Heart = ♥ -->
            <!-- font awesome  trashcan = <i class="fas fa-trash-alt"> </i>-->
            <span class="like-button" data-id="{{id}}" onclick="handleLikeClick(event)">♥ {{likes}} likes</span>
            <span class="profile-info" data-id="{{id}}">Posted by: {{this.username}}</span>
          
            <span class="post-time">{{this.postedAt}}</span>
            {{#ifCond userId id}}
            <span class="delete-button" data-id="{{id}}" onclick="handleDeleteClick(event)"><i class="fas fa-trash-alt"></i></span> 
            {{/ifCond}}
        </div>        
    </div>
</div>
<script>

    function handleLikeClick(event) {
        const postId = event.target.getAttribute('data-id');

        // you might want to "fetch" something...      
        fetch(`/like/${postId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            const likeButton = event.target;
            likeButton.innerText = `♥ ${data.likes}`;
        })
        .catch(error => console.error('Error:', error));
    }

    function handleDeleteClick(event) {
        const buttonElement = event.target.closest('.delete-button');
        const postId = buttonElement.getAttribute('data-id');        

        // you might want to "fetch" something...
        fetch(`/delete/${postId}`, {
            method: 'POST', // Change this to 'DELETE'
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const postElement = buttonElement.closest('.post');
                postElement.remove();
            } else {
                alert('Failed to delete the post.');
            }
        })
        .catch(error => console.error('Error:', error));
         window.location.reload();
    }
 
</script>
<style>
.post {
    display: flex;
    margin-bottom: 20px;
    background-color: antiquewhite;
}

.post-avatar {
    margin-right: 10px;
}

.post-avatar-img {
    width: 50px;
    height: 50px;
    border-radius: 50%;
}

.post-content {
    flex: 1;
}

.post-header {
    display: flex;
    justify-content: flex-end;
}

.post-status-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 10px;
}

.like-button {
    cursor: pointer;
    font-size: 1.2em;
    color: red;
}

.profile-info {
    cursor: pointer;
    font-size: 1em;
    color: black;
    text-align:center;
    margin-left: 108px;
}

.delete-button {
    cursor: pointer;
    font-size: 1.2em;
    color: gray;
}
</style>